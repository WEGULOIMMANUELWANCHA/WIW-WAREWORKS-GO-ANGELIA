
name: Build and Deploy Repositories

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Bazel
        run: |
          sudo apt update
          sudo apt install -y apt-transport-https curl gnupg
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor -o /usr/share/keyrings/bazel-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt update
          sudo apt install -y bazel
          bazel version
        shell: bash
          
      - name: Fetch Repository List
        run: |
          # Fetch the list of repositories to build from a text file (Repositories.txt)
          while IFS= read -r repo; do
            git clone "$repo"
          done < GithubRepositories/Repositories/Repositories.txt
        shell: bash

      - name: Build Binaries 
        run: |
          # Loop through the repository list file and perform actions for each repository
          while IFS= read -r repo; do
            repo_name=$(basename "$repo" .git)
            cd "$repo_name" || continue  # Continue to the next repository if CD fails
            
            # Build binaries using Bazel or any other necessary commands
            bazel build //...  # Adjust this command according to your specific build targets
            
            # Error handling and debugging
            if [ $? -ne 0 ]; then
              echo "Error building $repo_name"
              # Add more error handling or debugging steps as needed
            fi
            
            cd ..
            rm -rf "$repo_name"
          done < GithubRepositories/Repositories/Repositories.txt
        shell: bash

      - name: Bazel Test
        run: |
          # Run Bazel tests for the built binaries or any specific tests
          bazel test //...  # Adjust this command according to your specific test targets
          
          # Error handling and debugging
          if [ $? -ne 0 ]; then
            echo "Bazel test failed"
            # Add more error handling or debugging steps as needed
          fi
        shell: bash

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./Github\ Pages/Documents/Index.md # Path to publish directory for GitHub Pages

      - name: Store Artifacts as Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./Github\ Release/Artifacts/Artifacts@v1.0.0 # Path to artifacts for GitHub Release
